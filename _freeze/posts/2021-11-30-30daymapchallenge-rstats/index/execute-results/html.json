{
  "hash": "6a809aa8e720e6376edb4a1bde6549ac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"#30DayMapChallenge & #RStats\"\ndescription: |\n  Day 30: Metamapping day\ndate: 2021-11-30\ncategories:\n  - r-spatial\n  - dataviz\n  - rstats\nimage: figs/preview.png\ndraft: false\n---\n\n\n\n\n\n# The challenge\n\nSince 2019, the\n[#30DayMapChallenge](https://github.com/tjukanovt/30DayMapChallenge) by\n[Topi Tjukanov](https://twitter.com/tjukanov) has brought map geeks\ntogether for a month to flood our Twitter feeds with mind-blowing maps.\n\nThis year, I decided to participate by making maps with R! I had a lot\nof fun, but it was also quite a journey. I chose as an overarching topic\nmy home country: **Ecuador**. I posted each of the maps on\n[Twitter](https://twitter.com/loreabad6), and these two are the ones\nthat received most attention:\n\n<center>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/30DayMapChallenge?src=hash&amp;ref_src=twsrc%5Etfw\">#30DayMapChallenge</a> <br>Day 10: Raster<br>I am usually asked how hot my country is, and I usually say, not as hot as you may think! <br>Worldclim data is a wonderful source for <a href=\"https://twitter.com/hashtag/dataviz?src=hash&amp;ref_src=twsrc%5Etfw\">#dataviz</a><a href=\"https://twitter.com/hashtag/RStats?src=hash&amp;ref_src=twsrc%5Etfw\">#RStats</a> <a href=\"https://twitter.com/hashtag/rspatial?src=hash&amp;ref_src=twsrc%5Etfw\">#rspatial</a> <a href=\"https://t.co/Fgurk6du09\">pic.twitter.com/Fgurk6du09</a></p>&mdash; Lorena Abad (@loreabad6) <a href=\"https://twitter.com/loreabad6/status/1458747576455475210?ref_src=twsrc%5Etfw\">November 11, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/30DayMapChallenge?src=hash&amp;ref_src=twsrc%5Etfw\">#30DayMapChallenge</a> <br>Day 24: Historical<br><br>Humboldt&#39;s travels through the Americas<br>I have been fascinated with this scientist and since I read The Invention of Nature by <a href=\"https://twitter.com/andrea_wulf?ref_src=twsrc%5Etfw\">@andrea_wulf</a> I wanted to learn more and more!<a href=\"https://twitter.com/hashtag/RStats?src=hash&amp;ref_src=twsrc%5Etfw\">#RStats</a> <a href=\"https://twitter.com/hashtag/RSpatial?src=hash&amp;ref_src=twsrc%5Etfw\">#RSpatial</a> <a href=\"https://t.co/J5yPUqZtFY\">pic.twitter.com/J5yPUqZtFY</a></p>&mdash; Lorena Abad (@loreabad6) <a href=\"https://twitter.com/loreabad6/status/1463564916187619333?ref_src=twsrc%5Etfw\">November 24, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n</center>\n\nMy personal favorite, however, is day 13. I live away from home and so\nmany other Ecuadorians do. It was amazing to see where we all are, and\nhow \"far-away\" time wise each of us is from calling our loved ones.\n\n<center>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://twitter.com/hashtag/30DayMapChallenge?src=hash&amp;ref_src=twsrc%5Etfw\">#30DayMapChallenge</a> <br>Day 13: NaturalEarth data challenge<br><br>What is a good time to call home? Timezones are a hard thing to get used to when away from home. Here is a helpful map for all those Ecuadorians living abroad. <a href=\"https://twitter.com/hashtag/RStats?src=hash&amp;ref_src=twsrc%5Etfw\">#RStats</a> <a href=\"https://twitter.com/hashtag/RSpatial?src=hash&amp;ref_src=twsrc%5Etfw\">#RSpatial</a> <a href=\"https://t.co/i54824zsrx\">pic.twitter.com/i54824zsrx</a></p>&mdash; Lorena Abad (@loreabad6) <a href=\"https://twitter.com/loreabad6/status/1460351905444544514?ref_src=twsrc%5Etfw\">November 15, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n</center>\n\nYou can see my complete gallery on [this GitHub\nrepository](https://github.com/loreabad6/30DayMapChallenge). This post\nis meant to show the back-end of these maps, so here we go!\n\n# Code-driven maps\n\nI get a certain satisfaction of generating maps with code. To know that\na bunch of commands can result in pretty figures is not only rewarding\nbut also helpful. The certainty that I can always go back to a piece of\ncode to re-generate a certain plot is the peak of reproducible data\nvisualization.\n\nDon't get me wrong, GUIs are great and have many advantages, like not\ntaking 30 minutes to figure out the best coordinates for your labels.\nBut it is that nice feeling of seeing a map somewhere and thinking: *How\ndid this person do that? Which tools/packages did they use? Did they go\nthrough crazy workarounds to get that effect?*; and then actually being\nable to scan the building blocks of that map and answer those questions\nand test those effects for yourself, **that makes the difference for\nme**.\n\nOf course, this can only happen when code is shared. I personally love\nR's capabilities for creating nice maps/figures and I myself used only R\nfor this challenge (except for [Day 15: map without a\ncomputer](https://raw.githubusercontent.com/loreabad6/30DayMapChallenge/main/maps/day15.jpg)).\n\nMany other mappers used R for their challenge as well. Here are some of\nthe GitHub repositories and Gists I found, that used R for their\nchallenge:\n\n[richardvogg](https://github.com/richardvogg/30DayMapChallenge21) \\|\n[gkaramanis](https://github.com/gkaramanis/30DayMapChallenge) \\|\n[schochastics](https://github.com/schochastics/30DayMapChallenge) \\|\n[shandiya](https://github.com/shandiya/30DayMapChallenge) \\|\n[dakvid](https://gist.github.com/dakvid/) \\|\n[leeolney3](https://github.com/leeolney3/30DayMapChallenge) \\|\n[tashapiro](https://github.com/tashapiro/30DayMapChallenge) \\|\n[bydata](https://github.com/bydata/30DayMapChallenge-2021)\n\nI don't mean this in any way as a comprehensive list, but just a sample\nof all the creative code out there during this edition of the challenge.\nFor some further examples check [David Frigge's awesome\ngallery](https://david.frigge.nz/3RDayMapChallenge)!\n\n# Metamapping my challenge\n\nThe final day of the challenge is metamapping day. According to the\ndetails one can:\n\n> Spend the day either by 1) collecting your entries from the challenge\n> to a common gallery, 2) writing a tutorial or a blog post on one of\n> your maps or 3) create a map from a theme you have chosen yourself\n\nWell, I decided to derail a bit and write a *meta* blog post for all the\nmaps I created with R. In my tweets I always tried to include the\npackages I used for the day, however, I used so many for this challenge,\nthat I thought they deserved some extra love. Some packages I already\nknew by heart (all their ins-and-outs and awesome capabilities), but\nothers I discovered just because of this challenge and that was pretty\ncool. So, I chose for Day 30 to do a simple analysis of the packages I\nused.\n\nMy first task was to collect all the packages from my 28 R scripts. I\nwas bracing myself either to writing my own function that would find all\nmy `library()` calls, or to do some manual check of each. Luckily,\n`renv` came to my rescue. Did you know you can scan all the packages\nyour project depends on? This was exactly what I needed, so with one\nline:\n\n```         \nrenv::dependencies()\n```\n\nI managed to get all of the packages I used, per script. Next tasks:\nsummarize by number of times I called each package, and assign them a\ncategory. You can see the code I used\n[here](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day30_meta.R).\n\nThe final result? The packages I used for each of my self-assigned\ncategories and how many times I used them:\n\n\n\n::: {.cell .column-body-outset-left}\n::: {.cell-output-display}\n![](https://raw.githubusercontent.com/loreabad6/30DayMapChallenge/main/figs/day30.png)\n:::\n:::\n\n\n\n*Insights:*\n\n-   Total number of packages used:\n    ``` r emo::ji(\"five\")`9Ô∏è‚É£``\n-   There was not one package that was used every day of the challenge\n    ü§Ø\n-   Natural Earth was very frequently a data source, given that it is my\n    go-to package to get country polygons üòÅ\n-   Want to work with fonts on Windows?\n    [`extrafont`](https://github.com/wch/extrafont) is your package!\n    üòâ\n-   I limited my interactive mapping quite strictly to the set day\n    üòÖ\n\n## Most used R packages\n\n### [`sf`](https://r-spatial.github.io/sf/)\n\n::: column-margin\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://user-images.githubusercontent.com/520851/34887433-ce1d130e-f7c6-11e7-83fc-d60ad4fae6bd.gif){height=80}\n:::\n:::\n\n\n:::\n\nTake a look again at the plot above, which package stands out the most?\nBeautiful ***sf***! Simple features came here to stay and I am very glad\nit exists. Working with spatial data in R has never been easier, and\nthat is because of this awesome package. I used it to read spatial data\ninto R, to work with projections and to perform spatial analyses like\njoins, generating random spatial points, etc.\n\n### [`dplyr`](https://dplyr.tidyverse.org/)\n\n::: column-margin\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://raw.githubusercontent.com/tidyverse/dplyr/main/man/figures/logo.png){height=80}\n:::\n:::\n\n\n:::\n\nThe tidyverse has made working with data in R extremely intuitive. Being\nable to work with structured data frames brings data science to a new\nlevel. ***dplyr*** is the first tidyverse package I learnt and I use it\nconstantly for tasks as filtering, selecting, mutating, etc.\n\n### [`ggplot2`](https://ggplot2.tidyverse.org)\n\n::: column-margin\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/tidyverse/ggplot2/raw/main/man/figures/logo.png){height=80}\n:::\n:::\n\n\n:::\n\nAnother package of the tidyverse is ***ggplot2***, which introduces the\ngrammar of graphics into R and is extremely powerful to create awesome\nvisualizations. Two main functions allow you to combine this package\nwith spatial data: `geom_sf()` and `geom_stars()`. One interesting tip,\nif you learn to use `coord_sf()`, you can do things like assigning a CRS\nto your plot, although your data has a different projection, as\n`coord_sf(crs =\"+proj=geos\")`\n\nThis are the ggplot extensions I use the most:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"bdbryqmhvg\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#bdbryqmhvg table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#bdbryqmhvg thead, #bdbryqmhvg tbody, #bdbryqmhvg tfoot, #bdbryqmhvg tr, #bdbryqmhvg td, #bdbryqmhvg th {\n  border-style: none;\n}\n\n#bdbryqmhvg p {\n  margin: 0;\n  padding: 0;\n}\n\n#bdbryqmhvg .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#bdbryqmhvg .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#bdbryqmhvg .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#bdbryqmhvg .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#bdbryqmhvg .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#bdbryqmhvg .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#bdbryqmhvg .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#bdbryqmhvg .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#bdbryqmhvg .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#bdbryqmhvg .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#bdbryqmhvg .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#bdbryqmhvg .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#bdbryqmhvg .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#bdbryqmhvg .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#bdbryqmhvg .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bdbryqmhvg .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#bdbryqmhvg .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#bdbryqmhvg .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#bdbryqmhvg .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bdbryqmhvg .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#bdbryqmhvg .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bdbryqmhvg .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#bdbryqmhvg .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bdbryqmhvg .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#bdbryqmhvg .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#bdbryqmhvg .gt_left {\n  text-align: left;\n}\n\n#bdbryqmhvg .gt_center {\n  text-align: center;\n}\n\n#bdbryqmhvg .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#bdbryqmhvg .gt_font_normal {\n  font-weight: normal;\n}\n\n#bdbryqmhvg .gt_font_bold {\n  font-weight: bold;\n}\n\n#bdbryqmhvg .gt_font_italic {\n  font-style: italic;\n}\n\n#bdbryqmhvg .gt_super {\n  font-size: 65%;\n}\n\n#bdbryqmhvg .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#bdbryqmhvg .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#bdbryqmhvg .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#bdbryqmhvg .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#bdbryqmhvg .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#bdbryqmhvg .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#bdbryqmhvg .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  \n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"extension\" class=\"gt_row gt_left\"><div data-qmd=\"[`ggfx`](https://ggfx.data-imaginist.com/)\"><div class='gt_from_md'><p><a href=\"https://ggfx.data-imaginist.com/\"><code>ggfx</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\">To give shading and glow effects to spatial features</td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://github.com/thomasp85/ggfx/raw/main/man/figures/logo.png\" style=\"height:50px;\"></td></tr>\n    <tr><td headers=\"extension\" class=\"gt_row gt_left\"><div data-qmd=\"[`ggtext`](https://wilkelab.org/ggtext/)\"><div class='gt_from_md'><p><a href=\"https://wilkelab.org/ggtext/\"><code>ggtext</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\">To add special formatting to text</td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"\" style=\"height:50px;\"></td></tr>\n    <tr><td headers=\"extension\" class=\"gt_row gt_left\"><div data-qmd=\"[`gganimate`](https://ggrepel.slowkow.com/)\"><div class='gt_from_md'><p><a href=\"https://ggrepel.slowkow.com/\"><code>gganimate</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\">To animate the plots</td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://raw.githubusercontent.com/thomasp85/gganimate/master/man/figures/logo.png\" style=\"height:50px;\"></td></tr>\n    <tr><td headers=\"extension\" class=\"gt_row gt_left\"><div data-qmd=\"[`ggspatial`](https://paleolimbot.github.io/ggspatial/)\"><div class='gt_from_md'><p><a href=\"https://paleolimbot.github.io/ggspatial/\"><code>ggspatial</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\">To add north arrows and spatial scales</td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"\" style=\"height:50px;\"></td></tr>\n    <tr><td headers=\"extension\" class=\"gt_row gt_left\"><div data-qmd=\"[`ggnewscale`](https://eliocamp.github.io/ggnewscale/)\"><div class='gt_from_md'><p><a href=\"https://eliocamp.github.io/ggnewscale/\"><code>ggnewscale</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\">To map multiple variables to the fill/color aesthetics</td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://github.com/eliocamp/ggnewscale/raw/master/man/figures/logo.png\" style=\"height:50px;\"></td></tr>\n    <tr><td headers=\"extension\" class=\"gt_row gt_left\"><div data-qmd=\"[`ggimage`](https://github.com/GuangchuangYu/ggimage/)\"><div class='gt_from_md'><p><a href=\"https://github.com/GuangchuangYu/ggimage/\"><code>ggimage</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\">To add images in spatial locations or as annotations</td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"\" style=\"height:50px;\"></td></tr>\n    <tr><td headers=\"extension\" class=\"gt_row gt_left\"><div data-qmd=\"[`ggrepel`](https://ggrepel.slowkow.com/)\"><div class='gt_from_md'><p><a href=\"https://ggrepel.slowkow.com/\"><code>ggrepel</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\">To automatically place overlapping labels</td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://github.com/slowkow/ggrepel/raw/master/man/figures/logo.svg\" style=\"height:50px;\"></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n### [`osmdata`](https://github.com/ropensci/osmdata)\n\n::: column-margin\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://raw.githubusercontent.com/ropensci/osmdata/main/man/figures/logo.png){width=75 height=80}\n:::\n:::\n\n\n:::\n\nThis package is simply the easiest way I have come across in R to query\nOpenStreetMap data. I use it very often when I need to get data for\nsmall areas. For larger areas, for example a whole country, I use\n[`osmextract`](https://docs.ropensci.org/osmextract/).\n\n### [`tmap`](https://github.com/r-tmap/tmap)\n\n::: column-margin\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://user-images.githubusercontent.com/3457131/78889069-479c5480-7a63-11ea-9d76-e8a0acc55c3f.png){height=80}\n:::\n:::\n\n\n:::\n\nWant to plot spatial features fast and easy, static and interactive? Use\n***tmap***! I use this package a lot for my scientific publications\nbecause it allows you to use raster RGB images and vector data really\neasy. To get a bit more creative it has some limitations, and that is\nwhy I did not use it as often as ggplot2 on this challenge. But, one of\nthe main features I like about this one is the ability to call\n`tm_facets()` and get individual plots of features grouped by a\ncategory, and let scales x and y be free. This is not possible with\nggplot2. See that in action on [Day 22:\nBoundaries](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day22_boundaries.R).\n\n*Note:* This hex logo is not official yet but I love it! Waiting eagerly\nfor [version 4 of tmap](https://github.com/r-tmap/tmap/issues/599) to\nlaunch this nice logo and many new features!\n\n### [`scico`](https://github.com/thomasp85/scico)\n\n::: column-margin\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](https://github.com/thomasp85/scico/raw/main/man/figures/logo.png){height=80}\n:::\n:::\n\n\n:::\n\n[Fabio Crameri](https://www.fabiocrameri.ch/colourmaps/) provided the\nwhole scientific community a great set of scientific color palettes to\nfairly represent data that is universaly readable! ***scico*** allows\nyou to use the palettes in R. Another great source of palettes is\n[viridis](https://github.com/sjmgarnier/viridis), which is already\neasily accessible in ggplot2 with `scale_*_viridis_*()`.\n\n### [`stars`](https://github.com/r-spatial/stars)\n\n::: column-margin\n`stars` really needs a hex logo üôè\n:::\n\nSpatiotemporal Arrays, Raster and Vector Data Cubes are handled neatly\nwith ***stars***. For anything raster or netcdf related this is my go-to\npackage. It might be a bit complex to start with this package, but it is\ndefinitely worth it.\n\nOther options to work with raster data are `raster` and `terra` form the\n[rspatial universe](https://rspatial.r-universe.dev/), which I actually\nuse when I need to create hillshades from elevation data.\n\n## Honorable mentions\n\nAlthough not on the top 7 above, there are some packages that I use\nfrequently, but were not so used for this challenge. There are also\nreally cool packages that I only discovered in the past month. Here is a\ntable of how I used them:\n\n\n\n::: {.cell .column-body-outset-left}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"fdkoyyvtou\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#fdkoyyvtou table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#fdkoyyvtou thead, #fdkoyyvtou tbody, #fdkoyyvtou tfoot, #fdkoyyvtou tr, #fdkoyyvtou td, #fdkoyyvtou th {\n  border-style: none;\n}\n\n#fdkoyyvtou p {\n  margin: 0;\n  padding: 0;\n}\n\n#fdkoyyvtou .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#fdkoyyvtou .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#fdkoyyvtou .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#fdkoyyvtou .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#fdkoyyvtou .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#fdkoyyvtou .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#fdkoyyvtou .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#fdkoyyvtou .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#fdkoyyvtou .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#fdkoyyvtou .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#fdkoyyvtou .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#fdkoyyvtou .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#fdkoyyvtou .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#fdkoyyvtou .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#fdkoyyvtou .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fdkoyyvtou .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#fdkoyyvtou .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#fdkoyyvtou .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#fdkoyyvtou .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fdkoyyvtou .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#fdkoyyvtou .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fdkoyyvtou .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#fdkoyyvtou .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fdkoyyvtou .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#fdkoyyvtou .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#fdkoyyvtou .gt_left {\n  text-align: left;\n}\n\n#fdkoyyvtou .gt_center {\n  text-align: center;\n}\n\n#fdkoyyvtou .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#fdkoyyvtou .gt_font_normal {\n  font-weight: normal;\n}\n\n#fdkoyyvtou .gt_font_bold {\n  font-weight: bold;\n}\n\n#fdkoyyvtou .gt_font_italic {\n  font-style: italic;\n}\n\n#fdkoyyvtou .gt_super {\n  font-size: 65%;\n}\n\n#fdkoyyvtou .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#fdkoyyvtou .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#fdkoyyvtou .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#fdkoyyvtou .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#fdkoyyvtou .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#fdkoyyvtou .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#fdkoyyvtou .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout: fixed;\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col/>\n    <col/>\n    <col style=\"width:100px;\"/>\n  </colgroup>\n  \n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"pkg\" class=\"gt_row gt_left\"><div data-qmd=\"[`sfnetworks`](https://luukvdmeer.github.io/sfnetworks/)\"><div class='gt_from_md'><p><a href=\"https://luukvdmeer.github.io/sfnetworks/\"><code>sfnetworks</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\"><div data-qmd=\"OK, I am biased here, but have you checked out `sfnetworks` yet? Well, if you work with spatial networks you should. I used it to compute travel time using public transport in Quito for [Day 9: Monochrome](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day09_monochrome.R)\"><div class='gt_from_md'><p>OK, I am biased here, but have you checked out <code>sfnetworks</code> yet? Well, if you work with spatial networks you should. I used it to compute travel time using public transport in Quito for <a href=\"https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day09_monochrome.R\">Day 9: Monochrome</a></p>\n</div></div></td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://github.com/luukvdmeer/sfnetworks/raw/main/man/figures/logo.png\" style=\"height:100px;\"></td></tr>\n    <tr><td headers=\"pkg\" class=\"gt_row gt_left\"><div data-qmd=\"[`rgee`](https://r-spatial.github.io/rgee/)\"><div class='gt_from_md'><p><a href=\"https://r-spatial.github.io/rgee/\"><code>rgee</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\"><div data-qmd=\"Do you work with Google Earth Engine? Do you want to do that via R? Then use `rgee`. I use it to extract RGB thumbnails of Sentinel-2 imagery. See the RGB collection for [Day 6](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day06_red.R), [Day 7](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day07_green.R) and [Day 8](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day08_blue.R)\"><div class='gt_from_md'><p>Do you work with Google Earth Engine? Do you want to do that via R? Then use <code>rgee</code>. I use it to extract RGB thumbnails of Sentinel-2 imagery. See the RGB collection for <a href=\"https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day06_red.R\">Day 6</a>, <a href=\"https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day07_green.R\">Day 7</a> and <a href=\"https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day08_blue.R\">Day 8</a></p>\n</div></div></td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://raw.githubusercontent.com/r-spatial/rgee/master/man/figures/logo.png\" style=\"height:100px;\"></td></tr>\n    <tr><td headers=\"pkg\" class=\"gt_row gt_left\"><div data-qmd=\"[`rayshader`](https://www.rayshader.com/)\"><div class='gt_from_md'><p><a href=\"https://www.rayshader.com/\"><code>rayshader</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\"><div data-qmd=\"For [Day 11: 3D](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day11_3d.R) I could not use any other package than rayshader. 3D rendering can get so creative with this package\"><div class='gt_from_md'><p>For <a href=\"https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day11_3d.R\">Day 11: 3D</a> I could not use any other package than rayshader. 3D rendering can get so creative with this package</p>\n</div></div></td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://github.com/tylermorganwall/rayshader/raw/master/man/figures/raylogosmall.png\" style=\"height:100px;\"></td></tr>\n    <tr><td headers=\"pkg\" class=\"gt_row gt_left\"><div data-qmd=\"[`haven`](https://haven.tidyverse.org/)\"><div class='gt_from_md'><p><a href=\"https://haven.tidyverse.org/\"><code>haven</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\"><div data-qmd=\"Open data can come in so many formats and with so many extensions. When I first saw a `.dta` or a `.sav` file I thought, OK now what? Luckily, `haven` was just there ready made for these cases!\"><div class='gt_from_md'><p>Open data can come in so many formats and with so many extensions. When I first saw a <code>.dta</code> or a <code>.sav</code> file I thought, OK now what? Luckily, <code>haven</code> was just there ready made for these cases!</p>\n</div></div></td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://github.com/tidyverse/haven/raw/main/man/figures/logo.png\" style=\"height:100px;\"></td></tr>\n    <tr><td headers=\"pkg\" class=\"gt_row gt_left\"><div data-qmd=\"[`ggpomological`](https://www.garrickadenbuie.com/project/ggpomological/)\"><div class='gt_from_md'><p><a href=\"https://www.garrickadenbuie.com/project/ggpomological/\"><code>ggpomological</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\"><div data-qmd=\"For [Day 24: Historical](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day24_historical.R) I wanted to make a map with an old-style look. And there it was: `ggpomological`! I was very happy to run into this package\"><div class='gt_from_md'><p>For <a href=\"https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day24_historical.R\">Day 24: Historical</a> I wanted to make a map with an old-style look. And there it was: <code>ggpomological</code>! I was very happy to run into this package</p>\n</div></div></td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://github.com/gadenbuie/ggpomological/raw/main/man/figures/ggpomological-1.png\" style=\"height:100px;\"></td></tr>\n    <tr><td headers=\"pkg\" class=\"gt_row gt_left\"><div data-qmd=\"[`gggibbous`](https://github.com/mnbram/gggibbous)\"><div class='gt_from_md'><p><a href=\"https://github.com/mnbram/gggibbous\"><code>gggibbous</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\"><div data-qmd=\"I had seen moon plots in other dataviz projects before but had never tried them myself. For [Day 19: Island(s)](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day19_islands.R) I finally got the chance!\"><div class='gt_from_md'><p>I had seen moon plots in other dataviz projects before but had never tried them myself. For <a href=\"https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day19_islands.R\">Day 19: Island(s)</a> I finally got the chance!</p>\n</div></div></td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://cran.r-project.org/web/packages/gggibbous/readme/man/figures/gggibbous.png\" style=\"height:100px;\"></td></tr>\n    <tr><td headers=\"pkg\" class=\"gt_row gt_left\"><div data-qmd=\"[`biscale`](https://chris-prener.github.io/biscale/)\"><div class='gt_from_md'><p><a href=\"https://chris-prener.github.io/biscale/\"><code>biscale</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\"><div data-qmd=\"I remember I made some bivariate choropleth maps once and it required a lot of code to achieve. `biscale` made it easy! I really wanted to flip the legend, and I managed so if you are interested, code is there. Featured on [Day 26: Choropleth](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day26_choropleth.R)\"><div class='gt_from_md'><p>I remember I made some bivariate choropleth maps once and it required a lot of code to achieve. <code>biscale</code> made it easy! I really wanted to flip the legend, and I managed so if you are interested, code is there. Featured on <a href=\"https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day26_choropleth.R\">Day 26: Choropleth</a></p>\n</div></div></td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"https://github.com/slu-openGIS/biscale/raw/main/man/figures/logo.png\" style=\"height:100px;\"></td></tr>\n    <tr><td headers=\"pkg\" class=\"gt_row gt_left\"><div data-qmd=\"[`leaftime`](https://github.com/timelyportfolio/leaftime) & [`leaflet`](https://rstudio.github.io/leaflet/)\"><div class='gt_from_md'><p><a href=\"https://github.com/timelyportfolio/leaftime\"><code>leaftime</code></a> &amp; <a href=\"https://rstudio.github.io/leaflet/\"><code>leaflet</code></a></p>\n</div></div></td>\n<td headers=\"usage\" class=\"gt_row gt_left\"><div data-qmd=\"I normally handle my interactive maps with `tmap` or [`mapview`](https://r-spatial.github.io/mapview/), but this time I stubbornly wanted a time slider for my [Day 25: Interactive](https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day25_interactive.R) map, hence I ended up learning a lot on hot to use leaflet and its addons\"><div class='gt_from_md'><p>I normally handle my interactive maps with <code>tmap</code> or <a href=\"https://r-spatial.github.io/mapview/\"><code>mapview</code></a>, but this time I stubbornly wanted a time slider for my <a href=\"https://github.com/loreabad6/30DayMapChallenge/blob/main/scripts/day25_interactive.R\">Day 25: Interactive</a> map, hence I ended up learning a lot on hot to use leaflet and its addons</p>\n</div></div></td>\n<td headers=\"hex\" class=\"gt_row gt_left\"><img src=\"\" style=\"height:100px;\"></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n# Wrap-up\n\nWith this challenge I wanted to show how flexible R is to generate\nbeautiful reproducible maps. Maybe mine are not the best examples but\nthere are so many awesome contributions out there! I hope this post\nhelps anyone who wants to use R for spatial data visualization to point\nthem to good resources.\n\nThis was my first #30DayMapChallenge, it was exciting to think of new\ntopics every day but frustrating when Ecuador's open data repositories\neither had their servers down or chose to share the data only as WMS or\nwith no metadata. I know this does not happen only for Ecuador, as Sanna\nJokela explained on her tweet for one of her contributions.\n\n<center>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">This a perfect example on how NOT to do a map in <a href=\"https://twitter.com/hashtag/30DayMapChallenge?src=hash&amp;ref_src=twsrc%5Etfw\">#30DayMapChallenge</a>: do not get an idea before the data, because the everything goes √•t helvete. Although it SHOULD be the otherway around! This is the reason to open data. You never know who you are enabling to do a better job.</p>&mdash; Sanna Jokela (@SannaJokela1) <a href=\"https://twitter.com/SannaJokela1/status/1463399840130506752?ref_src=twsrc%5Etfw\">November 24, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n</center>\n\nI cannot think of a better way to end this challenge. Thanks to anyone\nwho followed my map making for 30 days, and sorry to those who follow me\nand were annoyed of having so many maps on your feed!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}